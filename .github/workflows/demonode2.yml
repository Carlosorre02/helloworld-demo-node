name: demonode2

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Repository to clone'
        required: true
        default: ''

env:
  REGISTRY: docker.io
  IMAGE_NAME: carlo02sorre/demonode

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Discovery and Use Base Image
        id: get_base_image
        run: |
          # Ottieni NODE_VERSION se specificato
          NODE_VERSION=$(grep "^ARG NODE_VERSION" Dockerfile | cut -d'=' -f2)

          # Estrai il nome e il tag dal campo FROM
          BASE_IMAGE_LINE=$(grep "^FROM" Dockerfile)
          NAME_TAG_PLATFORM=$(echo "$BASE_IMAGE_LINE" | sed "s/\${NODE_VERSION}/$NODE_VERSION/")

          # Estrai il nome dell'immagine
          IMAGE_NAME=$(echo "$NAME_TAG_PLATFORM" | awk -F'[ :]' '{print $2}')

          # Estrai il tag, gestendo le diverse opzioni di versione (major, major.minor, major.minor.patch)
          IMAGE_TAG=$(echo "$NAME_TAG_PLATFORM" | awk -F'[ :-]' '{print $2}' | grep -o '^[0-9]*\.[0-9]*\.[0-9]*\|^[0-9]*\.[0-9]*\|^[0-9]*')

          # Estrai la piattaforma, se specificata, ignorando eventuali numeri finali
          PLATFORM=$(echo "$NAME_TAG_PLATFORM" | awk -F'-' '{print $2}' | sed 's/[0-9]*$//')

          # Costruisci l'immagine base nel formato richiesto
          BASE_IMAGE="${IMAGE_NAME}:${IMAGE_TAG}"
          if [ -n "$PLATFORM" ]; then
            BASE_IMAGE="${BASE_IMAGE}-${PLATFORM}"
          fi

          # Stampa e salva il risultato
          echo "Base image used: $BASE_IMAGE"
          echo "BASE_IMAGE=$BASE_IMAGE" >> $GITHUB_ENV
