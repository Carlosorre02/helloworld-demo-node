name: demonode2

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Repository to clone'
        required: true
        default: ''

env:
  REGISTRY: docker.io
  IMAGE_NAME: carlo02sorre/demonode

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget -y
          wget https://github.com/aquasecurity/trivy/releases/download/v0.44.0/trivy_0.44.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.44.0_Linux-64bit.deb

      - name: Cache Trivy vulnerability DB
        uses: actions/cache@v3
        with:
          path: ~/.cache/trivy/db
          key: ${{ runner.os }}-trivy-db-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-trivy-db

      - name: Discovery and Use Base Image
        id: get_base_image
        run: |
          # Ottieni NODE_VERSION se specificato
          NODE_VERSION=$(grep "^ARG NODE_VERSION" Dockerfile | cut -d'=' -f2)

          # Estrai il nome e il tag dal campo FROM
          BASE_IMAGE_LINE=$(grep "^FROM" Dockerfile)
          NAME_TAG_PLATFORM=$(echo "$BASE_IMAGE_LINE" | sed "s/\${NODE_VERSION}/$NODE_VERSION/")

          # Estrai il nome dell'immagine
          IMAGE_NAME=$(echo "$NAME_TAG_PLATFORM" | cut -d' ' -f2 | cut -d':' -f1)

          # Estrai il tag, gestendo le diverse opzioni di versione
          IMAGE_TAG=$(echo "$NAME_TAG_PLATFORM" | cut -d' ' -f2 | cut -d':' -f2 | cut -d'-' -f1)

          # Estrai la piattaforma, se specificata
          PLATFORM=$(echo "$NAME_TAG_PLATFORM" | cut -d'-' -f2 | sed 's/[0-9]*$//')

          # Costruisci l'immagine base nel formato richiesto
          BASE_IMAGE="${IMAGE_NAME}:${IMAGE_TAG}"
          if [ -n "$PLATFORM" ]; then
            BASE_IMAGE="${BASE_IMAGE}-${PLATFORM}"
          fi

          # Stampa e salva il risultato
          echo "Base image used: $BASE_IMAGE"
          echo "BASE_IMAGE=$BASE_IMAGE" >> $GITHUB_ENV

      # - name: Run Trivy vulnerability scanner on Base Image
      #   uses: aquasecurity/trivy-action@master
      #   env:
      #     TRIVY_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-db"
      #   with:
      #     image-ref: ${{ env.BASE_IMAGE }}
      #     format: 'json'
      #     output: 'trivy-report.json'
      #     exit-code: '0'
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     severity: LOW,MEDIUM,HIGH,CRITICAL

      # - name: Upload Trivy JSON Report
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: trivy-report.json
      #     path: trivy-report.json

      # - name: Custom action
      #   uses: Carlosorre02/project-action@main
      #   with:
      #     trivy-report: 'trivy-report.json'
