# Workflow GitHub Actions esistente (modificato solo per aggiungere il caching del database di Trivy)

name: demonode2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log in to Docker Hub (se necessario)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    # Aggiunta del caching del database di vulnerabilità di Trivy
    - name: Cache Trivy vulnerability DB
      uses: actions/cache@v3
      with:
        path: ~/.cache/trivy/db
        key: ${{ runner.os }}-trivy-db-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-trivy-db

    # Step per installare Trivy (se non è già presente)
    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget https://github.com/aquasecurity/trivy/releases/download/v0.35.0/trivy_0.35.0_Linux-64bit.deb
        sudo dpkg -i trivy_0.35.0_Linux-64bit.deb

    # Scansione dell'immagine con Trivy
    - name: Scan Docker image for vulnerabilities
      run: |
        trivy image --format json --output trivy-report.json my-image:latest

    # Step custom action per il parsing del report Trivy
    - name: Parse Trivy Report
      uses: ./project-action
      with:
        report: trivy-report.json

    # Upload del report Trivy come artifact
    - name: Upload Trivy report
      uses: actions/upload-artifact@v3
      with:
        name: trivy-report
        path: trivy-report.json

